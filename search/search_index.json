{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This is just a collection of my references on various topics. Current docs include: Distributed Systems Golang Docker Git","title":"Home"},{"location":"#welcome","text":"This is just a collection of my references on various topics. Current docs include: Distributed Systems Golang Docker Git","title":"Welcome"},{"location":"distributed_systems/","text":"Clocks \u00b6 Time, Clocks, and the Ordering of Events in a Distributed System : Leslie Lamport's 1978 paper on ordering of events in a distributed system. Distributed Systems: Physical, Logical, and Vector Clocks : Nice post by Joe Honour explaining logical and vector clocks CAP Theorem \u00b6 Towards Robust Distributed Systems : Eric Brewer's original paper on CAP theorem. Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services : Gilbert and Lynch's proof of the CAP theorem DBMS Musings: Problems with CAP, and Yahoo\u2019s little known NoSQL system : Daniel Abadi's post about how to use PASELC instead of CAP to understand the tradeoffs in design. A paper/article on this is available here as well . Please stop calling databases CP or AP : Martin Kleppmann's post critiquing the CAP theorem. This post has a good section on explaining linearizable consistency. CAP Theorem: You don\u2019t need CP, you don\u2019t want AP, and you can\u2019t have CA : A really good talk by Siddhartha Reddy introducing CAP and PASELC 3. Consistency models \u00b6 Strong consistency models : Excellent post by Kyle Kingsbury about various consistency models. Linearizability: A Correctness Condition for Concurrent Objects : Paper on Linearizable consistency Consistency in Non-Transactional Distributed Storage Systems : A paper covering all kinds of consistency models Icons used: : Paper : Youtube video : PDF file","title":"Distributed Systems"},{"location":"distributed_systems/#clocks","text":"Time, Clocks, and the Ordering of Events in a Distributed System : Leslie Lamport's 1978 paper on ordering of events in a distributed system. Distributed Systems: Physical, Logical, and Vector Clocks : Nice post by Joe Honour explaining logical and vector clocks","title":"Clocks"},{"location":"distributed_systems/#cap-theorem","text":"Towards Robust Distributed Systems : Eric Brewer's original paper on CAP theorem. Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services : Gilbert and Lynch's proof of the CAP theorem DBMS Musings: Problems with CAP, and Yahoo\u2019s little known NoSQL system : Daniel Abadi's post about how to use PASELC instead of CAP to understand the tradeoffs in design. A paper/article on this is available here as well . Please stop calling databases CP or AP : Martin Kleppmann's post critiquing the CAP theorem. This post has a good section on explaining linearizable consistency. CAP Theorem: You don\u2019t need CP, you don\u2019t want AP, and you can\u2019t have CA : A really good talk by Siddhartha Reddy introducing CAP and PASELC","title":"CAP Theorem"},{"location":"distributed_systems/#3-consistency-models","text":"Strong consistency models : Excellent post by Kyle Kingsbury about various consistency models. Linearizability: A Correctness Condition for Concurrent Objects : Paper on Linearizable consistency Consistency in Non-Transactional Distributed Storage Systems : A paper covering all kinds of consistency models Icons used: : Paper : Youtube video : PDF file","title":"3. Consistency models"},{"location":"docker/","text":"Basics \u00b6 Cgroups, namespaces, and beyond: what are containers made from? : Dec 3, 2015, J\u00e9r\u00f4me Petazzoni Specs \u00b6 Docker Image Specification v1.0.0 Swarm \u00b6 Docker 1.12 Swarm Mode Deep Dive Part 1: Topology : Jul 28, 2016 Docker 1.12 Swarm Mode Deep Dive Part 2: Orchestration : Jul 28, 2016 Books \u00b6 The Docker book Docker Deep Dive","title":"Docker"},{"location":"docker/#basics","text":"Cgroups, namespaces, and beyond: what are containers made from? : Dec 3, 2015, J\u00e9r\u00f4me Petazzoni","title":"Basics"},{"location":"docker/#specs","text":"Docker Image Specification v1.0.0","title":"Specs"},{"location":"docker/#swarm","text":"Docker 1.12 Swarm Mode Deep Dive Part 1: Topology : Jul 28, 2016 Docker 1.12 Swarm Mode Deep Dive Part 2: Orchestration : Jul 28, 2016","title":"Swarm"},{"location":"docker/#books","text":"The Docker book Docker Deep Dive","title":"Books"},{"location":"git/","text":"References \u00b6 Using Git submodules : No matter how less I want to use Git modules, I seem to need them all the time. Most of the time, whenever I use a program like Hugo which has external extensions, I end up needing submodules. Common procedures \u00b6 Remove a Submodule within git : Adding a submodule is easy, removing is such a pain","title":"Git"},{"location":"git/#references","text":"Using Git submodules : No matter how less I want to use Git modules, I seem to need them all the time. Most of the time, whenever I use a program like Hugo which has external extensions, I end up needing submodules.","title":"References"},{"location":"git/#common-procedures","text":"Remove a Submodule within git : Adding a submodule is easy, removing is such a pain","title":"Common procedures"},{"location":"golang/","text":"Language features \u00b6 Working with Errors in Go 1.13 : How to wrap errors, and best practices for wrapping (or not wrapping) errors. Best practices \u00b6 Gophers, please tag your releases (Dave Cheney) - Tag your releases in preparation for better dependency tools coming in the future ( 2016-06-24 ) Idiomatic Go tricks - Mat Ryer , 2016-09-09, companion blog post Implementation articles \u00b6 Error handling in Upspin : An interesting article by the legendary Rob Pike about how to use custom error types to provide more meaningful messages in an app with many components. Videos \u00b6 Testing and Benchmarking in Go Workshop - Gopher Guides , 2017-11-30 Important third party libraries \u00b6 GORM : A popular Go ORM . Very well written usage documentation. CLI (Command line libraries): urfave CLI : Formerly codegangsta/cli . Man page like extensive help formatting. Cobra : Integrates with Viper , a config management library. Also uses pflag , a more posix compliant flag library than the standard library one.","title":"Golang"},{"location":"golang/#language-features","text":"Working with Errors in Go 1.13 : How to wrap errors, and best practices for wrapping (or not wrapping) errors.","title":"Language features"},{"location":"golang/#best-practices","text":"Gophers, please tag your releases (Dave Cheney) - Tag your releases in preparation for better dependency tools coming in the future ( 2016-06-24 ) Idiomatic Go tricks - Mat Ryer , 2016-09-09, companion blog post","title":"Best practices"},{"location":"golang/#implementation-articles","text":"Error handling in Upspin : An interesting article by the legendary Rob Pike about how to use custom error types to provide more meaningful messages in an app with many components.","title":"Implementation articles"},{"location":"golang/#videos","text":"Testing and Benchmarking in Go Workshop - Gopher Guides , 2017-11-30","title":"Videos"},{"location":"golang/#important-third-party-libraries","text":"GORM : A popular Go ORM . Very well written usage documentation. CLI (Command line libraries): urfave CLI : Formerly codegangsta/cli . Man page like extensive help formatting. Cobra : Integrates with Viper , a config management library. Also uses pflag , a more posix compliant flag library than the standard library one.","title":"Important third party libraries"}]}