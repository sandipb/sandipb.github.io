{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This is just a collection of my references on various topics.","title":"Home"},{"location":"#welcome","text":"This is just a collection of my references on various topics.","title":"Welcome"},{"location":"distributed_systems/","text":"Distributed Systems \u00b6 Clocks \u00b6 Time, Clocks, and the Ordering of Events in a Distributed System : Leslie Lamport's 1978 paper on ordering of events in a distributed system. Distributed Systems: Physical, Logical, and Vector Clocks : Nice post by Joe Honour explaining logical and vector clocks CAP Theorem \u00b6 Towards Robust Distributed Systems : Eric Brewer's original paper on CAP theorem. Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services : Gilbert and Lynch's proof of the CAP theorem DBMS Musings: Problems with CAP, and Yahoo\u2019s little known NoSQL system : Daniel Abadi's post about how to use PASELC instead of CAP to understand the tradeoffs in design. A paper/article on this is available here as well . Please stop calling databases CP or AP : Martin Kleppmann's post critiquing the CAP theorem. This post has a good section on explaining linearizable consistency. CAP Theorem: You don\u2019t need CP, you don\u2019t want AP, and you can\u2019t have CA : A really good talk by Siddhartha Reddy introducing CAP and PASELC Consistency models \u00b6 Strong consistency models : Excellent post by Kyle Kingsbury about various consistency models. Linearizability: A Correctness Condition for Concurrent Objects : Paper on Linearizable consistency Consistency in Non-Transactional Distributed Storage Systems : A paper covering all kinds of consistency models Icons used: : Paper : Youtube video : PDF file","title":"Distributed Systems"},{"location":"distributed_systems/#distributed-systems","text":"","title":"Distributed Systems"},{"location":"distributed_systems/#clocks","text":"Time, Clocks, and the Ordering of Events in a Distributed System : Leslie Lamport's 1978 paper on ordering of events in a distributed system. Distributed Systems: Physical, Logical, and Vector Clocks : Nice post by Joe Honour explaining logical and vector clocks","title":"Clocks"},{"location":"distributed_systems/#cap-theorem","text":"Towards Robust Distributed Systems : Eric Brewer's original paper on CAP theorem. Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services : Gilbert and Lynch's proof of the CAP theorem DBMS Musings: Problems with CAP, and Yahoo\u2019s little known NoSQL system : Daniel Abadi's post about how to use PASELC instead of CAP to understand the tradeoffs in design. A paper/article on this is available here as well . Please stop calling databases CP or AP : Martin Kleppmann's post critiquing the CAP theorem. This post has a good section on explaining linearizable consistency. CAP Theorem: You don\u2019t need CP, you don\u2019t want AP, and you can\u2019t have CA : A really good talk by Siddhartha Reddy introducing CAP and PASELC","title":"CAP Theorem"},{"location":"distributed_systems/#consistency-models","text":"Strong consistency models : Excellent post by Kyle Kingsbury about various consistency models. Linearizability: A Correctness Condition for Concurrent Objects : Paper on Linearizable consistency Consistency in Non-Transactional Distributed Storage Systems : A paper covering all kinds of consistency models Icons used: : Paper : Youtube video : PDF file","title":"Consistency models"},{"location":"git/","text":"Git \u00b6 Common procedures \u00b6 Remove git submodules \u00b6 Remove a Submodule within git : Adding a submodule is easy, removing is such a pain Revert a commit in the past \u00b6 tldr; git revert COMMIT or, for a range of changes: git revert COMMIT_R0..COMMIT_Rn . External resources: Tutorial: How to reset, revert, and return to previous states in Git Ref: git-revert References \u00b6 Using Git submodules : No matter how less I want to use Git modules, I seem to need them all the time. Most of the time, whenever I use a program like Hugo which has external extensions, I end up needing submodules.","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#common-procedures","text":"","title":"Common procedures"},{"location":"git/#remove-git-submodules","text":"Remove a Submodule within git : Adding a submodule is easy, removing is such a pain","title":"Remove git submodules"},{"location":"git/#revert-a-commit-in-the-past","text":"tldr; git revert COMMIT or, for a range of changes: git revert COMMIT_R0..COMMIT_Rn . External resources: Tutorial: How to reset, revert, and return to previous states in Git Ref: git-revert","title":"Revert a commit in the past"},{"location":"git/#references","text":"Using Git submodules : No matter how less I want to use Git modules, I seem to need them all the time. Most of the time, whenever I use a program like Hugo which has external extensions, I end up needing submodules.","title":"References"},{"location":"performance/","text":"Performance \u00b6 One of the best websites to look for performance related information is Brendan Gregg . Here are all this Linux Perf related resources. Theory \u00b6 The USE Method The Utilization Saturation and Errors (USE) Method is a methodology for analyzing the performance of any system. It directs the construction of a checklist, which for server analysis can be used for quickly identifying resource bottlenecks or errors. It begins by posing questions, and then seeks answers, instead of beginning with given metrics (partial answers) and trying to work backwards.","title":"Performance"},{"location":"performance/#performance","text":"One of the best websites to look for performance related information is Brendan Gregg . Here are all this Linux Perf related resources.","title":"Performance"},{"location":"performance/#theory","text":"The USE Method The Utilization Saturation and Errors (USE) Method is a methodology for analyzing the performance of any system. It directs the construction of a checklist, which for server analysis can be used for quickly identifying resource bottlenecks or errors. It begins by posing questions, and then seeks answers, instead of beginning with given metrics (partial answers) and trying to work backwards.","title":"Theory"},{"location":"cloud-native/containers/","text":"Containers \u00b6 Basics \u00b6 Cgroups, namespaces, and beyond: what are containers made from? : Dec 3, 2015, J\u00e9r\u00f4me Petazzoni Everything You Need to Know about Linux Containers, Part I: Linux Control Groups and Process Isolation : 2018, Linuxjournal Understanding Linux Container Scheduling : 2017, Squarespace Engineering blog Relevant Specs \u00b6 OS Related \u00b6 CFS scheduler design CFS Bandwidth Control Docker Related \u00b6 Docker Image Specification v1.0.0 Swarm \u00b6 Docker 1.12 Swarm Mode Deep Dive Part 1: Topology : Jul 28, 2016 Docker 1.12 Swarm Mode Deep Dive Part 2: Orchestration : Jul 28, 2016 Books \u00b6 The Docker book Docker Deep Dive","title":"Containers"},{"location":"cloud-native/containers/#containers","text":"","title":"Containers"},{"location":"cloud-native/containers/#basics","text":"Cgroups, namespaces, and beyond: what are containers made from? : Dec 3, 2015, J\u00e9r\u00f4me Petazzoni Everything You Need to Know about Linux Containers, Part I: Linux Control Groups and Process Isolation : 2018, Linuxjournal Understanding Linux Container Scheduling : 2017, Squarespace Engineering blog","title":"Basics"},{"location":"cloud-native/containers/#relevant-specs","text":"","title":"Relevant Specs"},{"location":"cloud-native/containers/#os-related","text":"CFS scheduler design CFS Bandwidth Control","title":"OS Related"},{"location":"cloud-native/containers/#docker-related","text":"Docker Image Specification v1.0.0","title":"Docker Related"},{"location":"cloud-native/containers/#swarm","text":"Docker 1.12 Swarm Mode Deep Dive Part 1: Topology : Jul 28, 2016 Docker 1.12 Swarm Mode Deep Dive Part 2: Orchestration : Jul 28, 2016","title":"Swarm"},{"location":"cloud-native/containers/#books","text":"The Docker book Docker Deep Dive","title":"Books"},{"location":"cloud-native/gcloud/","text":"gcloud runbook \u00b6 CLI commands I found useful while working with GCP projects. General \u00b6 Fetch list of projects accessible by the user id \u00b6 $ gcloud projects list --filter \"PROJECT_ID:*k8s*\" PROJECT_ID NAME PROJECT_NUMBER sb-gcp-k8s sb-gcp-k8s 123456789012 Create and download keys for a service account \u00b6 $ SVC_ACCT = \"reader@PROJECT_NAME.iam.gserviceaccount.com\" $ gcloud --project PROJECT_NAME iam service-accounts keys create --iam-account = \" ${ SVC_ACCT } \" \" ${ SVC_ACCT } .json\" ... List SSH keys added to project \u00b6 gcloud --project PROJECT_NAME compute project-info describe \\ | yq e '.commonInstanceMetadata.items[]|select(.key==\"ssh-keys\")|.value' Adding SSH keys to a project \u00b6 You need to download the list from the previous commands to a file, edit it for adding/modifying/deleting keys, and then add the new file back using: gcloud --project PROJECT_NAME compute project-info add-metadata --metadata-from-file ssh-keys = PATH_TO_FILE Reference Logging \u00b6 Search for logs for an operation \u00b6 Use the operation ID to look up the start ( operation.first==true ) or end ( operation.last==true ) of the operation, gcloud logging read --format = json 'operation.id=\"operation-162871234567-45678\"' \\ | jq '.[] | { operation, timestamp, \\ request: .protoPayload.request, \\ response: .protoPayload.response, \\ metadata: .protoPayload.metadata}' Kubernetes \u00b6 List kubernetes clusters in your project \u00b6 $ gcloud --project PROJECT_NAME container clusters list NAME LOCATION MASTER_VERSION MASTER_IP MACHINE_TYPE NODE_VERSION NUM_NODES STATUS cluster-a us-central1 1.20.9-gke.1001 10.100.100.100 n1-standard-32 1.20.9-gke.701 * 5 RUNNING * - There is an upgrade available for your cluster(s). Describe Master Control plane \u00b6 gcloud container clusters describe \"cluster-a\" \\ --project PROJECT_NAME \\ --region \"us-east4\" --format \"json\" \\ | jq '{currentMasterVersion, releaseChannel, notificationConfig}' { \"currentMasterVersion\" : \"1.20.8-gke.900\" , \"releaseChannel\" : { \"channel\" : \"REGULAR\" }, \"notificationConfig\" : { \"pubsub\" : { \"enabled\" : true , \"topic\" : \"projects/PROJECT_NAME/topics/upgrade-notifications\" } } } View Nodepools \u00b6 $ gcloud container node-pools list --cluster cluster-a --project PROJECT_NAME NAME MACHINE_TYPE DISK_SIZE_GB NODE_VERSION ingress n1-standard-16 100 1.20.8-gke.900 egress n2-standard-8 110 1.20.8-gke.900 main-node-pool n2-standard-32 300 1.20.8-gke.900 Adding maintenance exclusions \u00b6 gcloud container clusters update cluster-a --region us-west1 \\ --add-maintenance-exclusion-name vacation \\ --add-maintenance-exclusion-start 2020-11-17T00:00:00 \\ --add-maintenance-exclusion-end 2020-12-03T23:59:59","title":"Gcloud Runbook"},{"location":"cloud-native/gcloud/#gcloud-runbook","text":"CLI commands I found useful while working with GCP projects.","title":"gcloud runbook"},{"location":"cloud-native/gcloud/#general","text":"","title":"General"},{"location":"cloud-native/gcloud/#fetch-list-of-projects-accessible-by-the-user-id","text":"$ gcloud projects list --filter \"PROJECT_ID:*k8s*\" PROJECT_ID NAME PROJECT_NUMBER sb-gcp-k8s sb-gcp-k8s 123456789012","title":"Fetch list of projects accessible by the user id"},{"location":"cloud-native/gcloud/#create-and-download-keys-for-a-service-account","text":"$ SVC_ACCT = \"reader@PROJECT_NAME.iam.gserviceaccount.com\" $ gcloud --project PROJECT_NAME iam service-accounts keys create --iam-account = \" ${ SVC_ACCT } \" \" ${ SVC_ACCT } .json\" ...","title":"Create and download keys for a service account"},{"location":"cloud-native/gcloud/#list-ssh-keys-added-to-project","text":"gcloud --project PROJECT_NAME compute project-info describe \\ | yq e '.commonInstanceMetadata.items[]|select(.key==\"ssh-keys\")|.value'","title":"List SSH keys added to project"},{"location":"cloud-native/gcloud/#adding-ssh-keys-to-a-project","text":"You need to download the list from the previous commands to a file, edit it for adding/modifying/deleting keys, and then add the new file back using: gcloud --project PROJECT_NAME compute project-info add-metadata --metadata-from-file ssh-keys = PATH_TO_FILE Reference","title":"Adding SSH keys to a project"},{"location":"cloud-native/gcloud/#logging","text":"","title":"Logging"},{"location":"cloud-native/gcloud/#search-for-logs-for-an-operation","text":"Use the operation ID to look up the start ( operation.first==true ) or end ( operation.last==true ) of the operation, gcloud logging read --format = json 'operation.id=\"operation-162871234567-45678\"' \\ | jq '.[] | { operation, timestamp, \\ request: .protoPayload.request, \\ response: .protoPayload.response, \\ metadata: .protoPayload.metadata}'","title":"Search for logs for an operation"},{"location":"cloud-native/gcloud/#kubernetes","text":"","title":"Kubernetes"},{"location":"cloud-native/gcloud/#list-kubernetes-clusters-in-your-project","text":"$ gcloud --project PROJECT_NAME container clusters list NAME LOCATION MASTER_VERSION MASTER_IP MACHINE_TYPE NODE_VERSION NUM_NODES STATUS cluster-a us-central1 1.20.9-gke.1001 10.100.100.100 n1-standard-32 1.20.9-gke.701 * 5 RUNNING * - There is an upgrade available for your cluster(s).","title":"List kubernetes clusters in your project"},{"location":"cloud-native/gcloud/#describe-master-control-plane","text":"gcloud container clusters describe \"cluster-a\" \\ --project PROJECT_NAME \\ --region \"us-east4\" --format \"json\" \\ | jq '{currentMasterVersion, releaseChannel, notificationConfig}' { \"currentMasterVersion\" : \"1.20.8-gke.900\" , \"releaseChannel\" : { \"channel\" : \"REGULAR\" }, \"notificationConfig\" : { \"pubsub\" : { \"enabled\" : true , \"topic\" : \"projects/PROJECT_NAME/topics/upgrade-notifications\" } } }","title":"Describe Master Control plane"},{"location":"cloud-native/gcloud/#view-nodepools","text":"$ gcloud container node-pools list --cluster cluster-a --project PROJECT_NAME NAME MACHINE_TYPE DISK_SIZE_GB NODE_VERSION ingress n1-standard-16 100 1.20.8-gke.900 egress n2-standard-8 110 1.20.8-gke.900 main-node-pool n2-standard-32 300 1.20.8-gke.900","title":"View Nodepools"},{"location":"cloud-native/gcloud/#adding-maintenance-exclusions","text":"gcloud container clusters update cluster-a --region us-west1 \\ --add-maintenance-exclusion-name vacation \\ --add-maintenance-exclusion-start 2020-11-17T00:00:00 \\ --add-maintenance-exclusion-end 2020-12-03T23:59:59","title":"Adding maintenance exclusions"},{"location":"cloud-native/kubernetes/","text":"Kubernetes \u00b6 Writing controllers \u00b6 Writing Kube Controllers for Everyone - Maciej Szulik, Red Hat (Beginner Skill Level) : Nice summary, with some guidelines on writing controllers at the end. Misc \u00b6 Kubernetes Failure Stories : A compiled list of links to public failure stories related to Kubernetes.","title":"Kubernetes"},{"location":"cloud-native/kubernetes/#kubernetes","text":"","title":"Kubernetes"},{"location":"cloud-native/kubernetes/#writing-controllers","text":"Writing Kube Controllers for Everyone - Maciej Szulik, Red Hat (Beginner Skill Level) : Nice summary, with some guidelines on writing controllers at the end.","title":"Writing controllers"},{"location":"cloud-native/kubernetes/#misc","text":"Kubernetes Failure Stories : A compiled list of links to public failure stories related to Kubernetes.","title":"Misc"},{"location":"cookbooks/synology/","text":"Notes about Synology NAS \u00b6 Install homebrew on Synology \u00b6 Ref: https://community.synology.com/enu/forum/1/post/153781 Fix docker group permissions \u00b6 Ref: https://www.synoforum.com/threads/permissions-for-user-to-run-docker.3536/post-16480 create the group \"docker\" from the ui or cli ( sudo synogroup --add docker ) make it the group of the docker.sock: sudo chown root:docker /var/run/docker.sock assign the user to the docker group in the ui or cli ( sudo synogroup --member docker {username} ) login into ssh as {username} and try (if you were already logged in before you created the group, logout and relogin) Install Jellyfin \u00b6 https://mariushosting.com/how-to-install-jellyfin-on-your-synology-nas/ I however installed the app via the Docker package. This unfortunately doesnt provide an interface to run a container rootless. Looking for a workaround.","title":"Synology"},{"location":"cookbooks/synology/#notes-about-synology-nas","text":"","title":"Notes about Synology NAS"},{"location":"cookbooks/synology/#install-homebrew-on-synology","text":"Ref: https://community.synology.com/enu/forum/1/post/153781","title":"Install homebrew on Synology"},{"location":"cookbooks/synology/#fix-docker-group-permissions","text":"Ref: https://www.synoforum.com/threads/permissions-for-user-to-run-docker.3536/post-16480 create the group \"docker\" from the ui or cli ( sudo synogroup --add docker ) make it the group of the docker.sock: sudo chown root:docker /var/run/docker.sock assign the user to the docker group in the ui or cli ( sudo synogroup --member docker {username} ) login into ssh as {username} and try (if you were already logged in before you created the group, logout and relogin)","title":"Fix docker group permissions"},{"location":"cookbooks/synology/#install-jellyfin","text":"https://mariushosting.com/how-to-install-jellyfin-on-your-synology-nas/ I however installed the app via the Docker package. This unfortunately doesnt provide an interface to run a container rootless. Looking for a workaround.","title":"Install Jellyfin"},{"location":"observability/prometheus/","text":"Prometheus \u00b6 TSDB \u00b6 Prometheus storage : Prometheus docs TSDB section Writing a Time Series Database from Scratch : Design decisions behind the rewrite of Prometheus TSDB in 2.x which provided a dramatic difference in performance and made it not kill SSDs. PromCon 2017: Storing 16 Bytes at Scale - Fabian Reinartz : A talk on the previous point.","title":"Prometheus"},{"location":"observability/prometheus/#prometheus","text":"","title":"Prometheus"},{"location":"observability/prometheus/#tsdb","text":"Prometheus storage : Prometheus docs TSDB section Writing a Time Series Database from Scratch : Design decisions behind the rewrite of Prometheus TSDB in 2.x which provided a dramatic difference in performance and made it not kill SSDs. PromCon 2017: Storing 16 Bytes at Scale - Fabian Reinartz : A talk on the previous point.","title":"TSDB"},{"location":"observability/tsdb/","text":"Time Series Database related resources \u00b6 Resources related to Time Series Databases, other than that of Prometheus. RocksDB Write Ahead Log File Format : The Prometheus WAL format is loosely based on this. Gorilla: A Fast, Scalable, In-Memory Time Series Database : Pelkonen et al. 2015. The morning paper: Gorilla: A fast, scalable, in-memory time series database : A more accessible explanation of the compression format.","title":"TSDB"},{"location":"observability/tsdb/#time-series-database-related-resources","text":"Resources related to Time Series Databases, other than that of Prometheus. RocksDB Write Ahead Log File Format : The Prometheus WAL format is loosely based on this. Gorilla: A Fast, Scalable, In-Memory Time Series Database : Pelkonen et al. 2015. The morning paper: Gorilla: A fast, scalable, in-memory time series database : A more accessible explanation of the compression format.","title":"Time Series Database related resources"},{"location":"operating-systems/linux_ubuntu/","text":"Linux / Ubuntu Notes and Runbooks \u00b6 I have been primarily using Ubuntu in my personal systems and RHEL at my work. These Linux \u00b6 Ubuntu \u00b6 Restore original config files for a package \u00b6 When I have mucked up the config file for a package and need to restore it to its pristine self. $ sudo apt-get --reinstall -o Dpkg::Options:: = \"--force-confask\" install rsyslog ... Preparing to unpack .../rsyslog_8.2001.0-1ubuntu1.1_amd64.deb ... Unpacking rsyslog (8.2001.0-1ubuntu1.1) over (8.2001.0-1ubuntu1.1) ... Setting up rsyslog (8.2001.0-1ubuntu1.1) ... Configuration file '/etc/rsyslog.conf' ==> Modified (by you or by a script) since installation. Version in package is the same as at last installation. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** rsyslog.conf (Y/I/N/O/D/Z) [default=N] ? y Installing new version of config file /etc/rsyslog.conf ... ...","title":"Linux/Ubuntu"},{"location":"operating-systems/linux_ubuntu/#linux-ubuntu-notes-and-runbooks","text":"I have been primarily using Ubuntu in my personal systems and RHEL at my work. These","title":"Linux / Ubuntu Notes and Runbooks"},{"location":"operating-systems/linux_ubuntu/#linux","text":"","title":"Linux"},{"location":"operating-systems/linux_ubuntu/#ubuntu","text":"","title":"Ubuntu"},{"location":"operating-systems/linux_ubuntu/#restore-original-config-files-for-a-package","text":"When I have mucked up the config file for a package and need to restore it to its pristine self. $ sudo apt-get --reinstall -o Dpkg::Options:: = \"--force-confask\" install rsyslog ... Preparing to unpack .../rsyslog_8.2001.0-1ubuntu1.1_amd64.deb ... Unpacking rsyslog (8.2001.0-1ubuntu1.1) over (8.2001.0-1ubuntu1.1) ... Setting up rsyslog (8.2001.0-1ubuntu1.1) ... Configuration file '/etc/rsyslog.conf' ==> Modified (by you or by a script) since installation. Version in package is the same as at last installation. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** rsyslog.conf (Y/I/N/O/D/Z) [default=N] ? y Installing new version of config file /etc/rsyslog.conf ... ...","title":"Restore original config files for a package"},{"location":"operating-systems/mac/","text":"Mac related Runbooks \u00b6 Using CLI to find software updates \u00b6 $ softwareupdate -l Software Update Tool Finding available software Software Update found the following new or updated software: * Label: Command Line Tools for Xcode-13.0 Title: Command Line Tools for Xcode, Version: 13.0, Size: 528803K, Recommended: YES, * Label: Safari15.0BigSurAuto-15.0 Title: Safari, Version: 15.0, Size: 119059K, Recommended: YES, Using CLI to do software updates \u00b6 $ softwareupdate -i \"Command Line Tools for Xcode-13.0\" # Has to match the label exactly Software Update Tool Finding available software Downloaded Command Line Tools for Xcode Installing Command Line Tools for Xcode Done with Command Line Tools for Xcode Done. Using CLI to save password to keychain and retrieve them \u00b6 Add a new password for account ( -a ) on service ( -s ) with label ( -l ) $ security add-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: Retrieve the password. $ security find-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w test You cannot overwrite an existing password unless you provide the -U parameter. $ security add-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: security: SecKeychainAddInternetPassword <NULL>: The specified item already exists in the keychain. $ security add-internet-password -U -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: $ If you want non-interactive input, provide the password after the -w parameter ( -w always has to be the last parameter for this tool). Obviously, this is very insecure! $ security add-internet-password -U -a sandip@example.com -s github.com -l \"personal access token\" -w 'some password' $ security find-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w some password","title":"Mac"},{"location":"operating-systems/mac/#mac-related-runbooks","text":"","title":"Mac related Runbooks"},{"location":"operating-systems/mac/#using-cli-to-find-software-updates","text":"$ softwareupdate -l Software Update Tool Finding available software Software Update found the following new or updated software: * Label: Command Line Tools for Xcode-13.0 Title: Command Line Tools for Xcode, Version: 13.0, Size: 528803K, Recommended: YES, * Label: Safari15.0BigSurAuto-15.0 Title: Safari, Version: 15.0, Size: 119059K, Recommended: YES,","title":"Using CLI to find software updates"},{"location":"operating-systems/mac/#using-cli-to-do-software-updates","text":"$ softwareupdate -i \"Command Line Tools for Xcode-13.0\" # Has to match the label exactly Software Update Tool Finding available software Downloaded Command Line Tools for Xcode Installing Command Line Tools for Xcode Done with Command Line Tools for Xcode Done.","title":"Using CLI to do software updates"},{"location":"operating-systems/mac/#using-cli-to-save-password-to-keychain-and-retrieve-them","text":"Add a new password for account ( -a ) on service ( -s ) with label ( -l ) $ security add-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: Retrieve the password. $ security find-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w test You cannot overwrite an existing password unless you provide the -U parameter. $ security add-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: security: SecKeychainAddInternetPassword <NULL>: The specified item already exists in the keychain. $ security add-internet-password -U -a sandip@example.com -s github.com -l \"personal access token\" -w password data for new item: retype password for new item: $ If you want non-interactive input, provide the password after the -w parameter ( -w always has to be the last parameter for this tool). Obviously, this is very insecure! $ security add-internet-password -U -a sandip@example.com -s github.com -l \"personal access token\" -w 'some password' $ security find-internet-password -a sandip@example.com -s github.com -l \"personal access token\" -w some password","title":"Using CLI to save password to keychain and retrieve them"},{"location":"programming/golang/","text":"Golang \u00b6 Language features and implementation details \u00b6 Working with Errors in Go 1.13 : How to wrap errors, and best practices for wrapping (or not wrapping) errors. Inside the Map Implementation : By Keith Randall at GopherCon 2016. Best practices \u00b6 Gophers, please tag your releases (Dave Cheney) - Tag your releases in preparation for better dependency tools coming in the future ( 2016-06-24 ) Idiomatic Go tricks - Mat Ryer , 2016-09-09, companion blog post Implementation articles \u00b6 Error handling in Upspin : An interesting article by the legendary Rob Pike about how to use custom error types to provide more meaningful messages in an app with many components. Videos \u00b6 Testing and Benchmarking in Go Workshop - Gopher Guides , 2017-11-30 Important third party libraries \u00b6 GORM : A popular Go ORM . Very well written usage documentation. CLI (Command line libraries): urfave CLI : Formerly codegangsta/cli . Man page like extensive help formatting. Cobra : Integrates with Viper , a config management library. Also uses pflag , a more posix compliant flag library than the standard library one.","title":"Golang"},{"location":"programming/golang/#golang","text":"","title":"Golang"},{"location":"programming/golang/#language-features-and-implementation-details","text":"Working with Errors in Go 1.13 : How to wrap errors, and best practices for wrapping (or not wrapping) errors. Inside the Map Implementation : By Keith Randall at GopherCon 2016.","title":"Language features and implementation details"},{"location":"programming/golang/#best-practices","text":"Gophers, please tag your releases (Dave Cheney) - Tag your releases in preparation for better dependency tools coming in the future ( 2016-06-24 ) Idiomatic Go tricks - Mat Ryer , 2016-09-09, companion blog post","title":"Best practices"},{"location":"programming/golang/#implementation-articles","text":"Error handling in Upspin : An interesting article by the legendary Rob Pike about how to use custom error types to provide more meaningful messages in an app with many components.","title":"Implementation articles"},{"location":"programming/golang/#videos","text":"Testing and Benchmarking in Go Workshop - Gopher Guides , 2017-11-30","title":"Videos"},{"location":"programming/golang/#important-third-party-libraries","text":"GORM : A popular Go ORM . Very well written usage documentation. CLI (Command line libraries): urfave CLI : Formerly codegangsta/cli . Man page like extensive help formatting. Cobra : Integrates with Viper , a config management library. Also uses pflag , a more posix compliant flag library than the standard library one.","title":"Important third party libraries"}]}